/*** EPITECH PROJECT, 2021** R_type** File description:** Displayable*/#include <iostream>#include "Displayable.hpp"#include "RType.hpp"namespace rtype{Displayable::Displayable(const sf::Texture &texture, RType *scene)	: _sprite(texture), _isActive(true), _scene(scene){	setOrigin(float(_sprite.getTexture()->getSize().x) / 2,	          float(_sprite.getTexture()->getSize().y) / 2);}void Displayable::draw(sf::RenderTarget &target, sf::RenderStates states) const{	states.transform = getTransform();	states.texture = _sprite.getTexture();	target.draw(_sprite, states);}void Displayable::setSize(unsigned int width, unsigned int height){	float scaleW = float(width) / _sprite.getTexture()->getSize().x;	float scaleH = float(height) / _sprite.getTexture()->getSize().y;	setScale(scaleW, scaleH);}void Displayable::setActive(bool state){	_isActive = state;}bool Displayable::isActive() const{	return _isActive;}void Displayable::setLeft(){	sf::Vector2f size(_scene->getWindow().getSize());	setPosition(_sprite.getTexture()->getSize().x,	            size.y / 2);}void Displayable::setTop(){	sf::Vector2f size(_scene->getWindow().getSize());	setPosition(size.x / 2, _sprite.getTexture()->getSize().y + 1);}void Displayable::setRight(){	sf::Vector2f size(_scene->getWindow().getSize());	setPosition(size.x - _sprite.getTexture()->getSize().x - 1, size.y /	                                                            2);}void Displayable::setBot(){	sf::Vector2f size(_scene->getWindow().getSize());	setPosition(size.x / 2, size.y - _sprite.getTexture()->getSize().y - 1);}void Displayable::setCenter(){	sf::Vector2f size(_scene->getWindow().getSize());	setPosition(size.x / 2, size.y / 2);}}